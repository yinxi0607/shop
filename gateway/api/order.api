syntax = "v1"

type OrderItem {
    Pid string `json:"pid"`
    Quantity int32 `json:"quantity"`
}

type Order {
    OrderID string `json:"order_id"`
    UserID string `json:"user_id"`
    Items []OrderItem `json:"items"`
    TotalPrice float64 `json:"total_price"`
    Status string `json:"status"`
    CreatedAt string `json:"created_at"`
    UpdatedAt string `json:"updated_at"`
}

type CreateOrderRequest {
    UserID string `json:"user_id,optional"`
    UseCart bool `json:"use_cart"`
    Items []OrderItem `json:"items,optional"`
}

type CreateOrderResponse {
    OrderID string `json:"order_id"`
}

type GetOrderDetailRequest {
    OrderID string `form:"order_id"`
    UserID string `form:"user_id,optional"` // 新增 UserID
}

type GetOrderDetailResponse {
    Order Order `json:"order"`
}

type ListOrdersRequest {
    UserID string `form:"user_id,optional"`
    Page int32 `form:"page" default:"1"`
    PageSize int32 `form:"page_size" default:"10"`
}

type ListOrdersResponse {
    Orders []Order `json:"orders"`
    Total int32 `json:"total"`
}

type UpdateOrderStatusRequest {
    OrderID string `json:"order_id"`
    Status string `json:"status"`
    UserID string `form:"user_id,optional"` // 新增 UserID
}

type UpdateOrderStatusResponse {
    Success bool `json:"success"`
}

type SeckillOrderRequest {
    UserID string `json:"user_id,optional"`
    Pid string `json:"pid"`
    Quantity int32 `json:"quantity"`
}

type SeckillOrderResponse {
    OrderID string `json:"order_id"`
    Success bool `json:"success"`
}

@server(
    group: order
    middleware: JwtMiddleware
    prefix: /api/v1
)
service GatewayAPI {
    @handler CreateOrder
    post /order/create (CreateOrderRequest) returns (CreateOrderResponse)

    @handler GetOrderDetail
    get /order/detail (GetOrderDetailRequest) returns (GetOrderDetailResponse)

    @handler ListOrders
    get /order/list (ListOrdersRequest) returns (ListOrdersResponse)

    @handler UpdateOrderStatus
    put /order/update-status (UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse)

    @handler SeckillOrder
    post /order/seckill (SeckillOrderRequest) returns (SeckillOrderResponse)
}