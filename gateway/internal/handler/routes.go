// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package handler

import (
	"net/http"

	product "shop/gateway/internal/handler/product"
	user "shop/gateway/internal/handler/user"
	"shop/gateway/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/product/banner",
				Handler: product.ListBannerProductsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product/detail",
				Handler: product.GetProductDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product/list",
				Handler: product.ListProductsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product/recommended",
				Handler: product.ListRecommendedProductsHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/product/add",
					Handler: product.AddProductHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/product/update",
					Handler: product.UpdateProductHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: user.RegisterHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPut,
					Path:    "/user/change-avatar",
					Handler: user.ChangeAvatarHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/user/change-password",
					Handler: user.ChangePasswordHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/user/change-role",
					Handler: user.ChangeRoleHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/user/change-username",
					Handler: user.ChangeUsernameHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/info",
					Handler: user.GetUserInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1"),
	)
}
