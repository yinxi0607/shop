// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: payment.proto

package server

import (
	"context"

	"shop/payment/internal/logic"
	"shop/payment/internal/svc"
	"shop/payment/payment"
)

type PaymentRpcServer struct {
	svcCtx *svc.ServiceContext
	payment.UnimplementedPaymentRpcServer
}

func NewPaymentRpcServer(svcCtx *svc.ServiceContext) *PaymentRpcServer {
	return &PaymentRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *PaymentRpcServer) CreatePayment(ctx context.Context, in *payment.CreatePaymentRequest) (*payment.CreatePaymentResponse, error) {
	l := logic.NewCreatePaymentLogic(ctx, s.svcCtx)
	return l.CreatePayment(in)
}

func (s *PaymentRpcServer) GetPaymentStatus(ctx context.Context, in *payment.GetPaymentStatusRequest) (*payment.GetPaymentStatusResponse, error) {
	l := logic.NewGetPaymentStatusLogic(ctx, s.svcCtx)
	return l.GetPaymentStatus(in)
}

func (s *PaymentRpcServer) PaymentCallback(ctx context.Context, in *payment.PaymentCallbackRequest) (*payment.PaymentCallbackResponse, error) {
	l := logic.NewPaymentCallbackLogic(ctx, s.svcCtx)
	return l.PaymentCallback(in)
}

func (s *PaymentRpcServer) Refund(ctx context.Context, in *payment.RefundRequest) (*payment.RefundResponse, error) {
	l := logic.NewRefundLogic(ctx, s.svcCtx)
	return l.Refund(in)
}

func (s *PaymentRpcServer) GetRefundStatus(ctx context.Context, in *payment.GetRefundStatusRequest) (*payment.GetRefundStatusResponse, error) {
	l := logic.NewGetRefundStatusLogic(ctx, s.svcCtx)
	return l.GetRefundStatus(in)
}
