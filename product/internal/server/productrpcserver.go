// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: product.proto

package server

import (
	"context"

	"shop/product/internal/logic"
	"shop/product/internal/svc"
	"shop/product/product"
)

type ProductRpcServer struct {
	svcCtx *svc.ServiceContext
	product.UnimplementedProductRpcServer
}

func NewProductRpcServer(svcCtx *svc.ServiceContext) *ProductRpcServer {
	return &ProductRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductRpcServer) ListProducts(ctx context.Context, in *product.ListProductsRequest) (*product.ListProductsResponse, error) {
	l := logic.NewListProductsLogic(ctx, s.svcCtx)
	return l.ListProducts(in)
}

func (s *ProductRpcServer) GetProductDetail(ctx context.Context, in *product.GetProductDetailRequest) (*product.GetProductDetailResponse, error) {
	l := logic.NewGetProductDetailLogic(ctx, s.svcCtx)
	return l.GetProductDetail(in)
}

func (s *ProductRpcServer) UpdateProduct(ctx context.Context, in *product.UpdateProductRequest) (*product.UpdateProductResponse, error) {
	l := logic.NewUpdateProductLogic(ctx, s.svcCtx)
	return l.UpdateProduct(in)
}

func (s *ProductRpcServer) AddProduct(ctx context.Context, in *product.AddProductRequest) (*product.AddProductResponse, error) {
	l := logic.NewAddProductLogic(ctx, s.svcCtx)
	return l.AddProduct(in)
}

func (s *ProductRpcServer) ListBannerProducts(ctx context.Context, in *product.ListBannerProductsRequest) (*product.ListBannerProductsResponse, error) {
	l := logic.NewListBannerProductsLogic(ctx, s.svcCtx)
	return l.ListBannerProducts(in)
}

func (s *ProductRpcServer) ListRecommendedProducts(ctx context.Context, in *product.ListRecommendedProductsRequest) (*product.ListRecommendedProductsResponse, error) {
	l := logic.NewListRecommendedProductsLogic(ctx, s.svcCtx)
	return l.ListRecommendedProducts(in)
}
