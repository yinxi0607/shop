// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: product.proto

package productrpc

import (
	"context"

	"shop/product/product"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddProductRequest               = product.AddProductRequest
	AddProductResponse              = product.AddProductResponse
	GetProductDetailRequest         = product.GetProductDetailRequest
	GetProductDetailResponse        = product.GetProductDetailResponse
	ListBannerProductsRequest       = product.ListBannerProductsRequest
	ListBannerProductsResponse      = product.ListBannerProductsResponse
	ListProductsRequest             = product.ListProductsRequest
	ListProductsResponse            = product.ListProductsResponse
	ListRecommendedProductsRequest  = product.ListRecommendedProductsRequest
	ListRecommendedProductsResponse = product.ListRecommendedProductsResponse
	Product                         = product.Product
	UpdateProductRequest            = product.UpdateProductRequest
	UpdateProductResponse           = product.UpdateProductResponse

	ProductRpc interface {
		ListProducts(ctx context.Context, in *ListProductsRequest, opts ...grpc.CallOption) (*ListProductsResponse, error)
		GetProductDetail(ctx context.Context, in *GetProductDetailRequest, opts ...grpc.CallOption) (*GetProductDetailResponse, error)
		UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error)
		AddProduct(ctx context.Context, in *AddProductRequest, opts ...grpc.CallOption) (*AddProductResponse, error)
		ListBannerProducts(ctx context.Context, in *ListBannerProductsRequest, opts ...grpc.CallOption) (*ListBannerProductsResponse, error)
		ListRecommendedProducts(ctx context.Context, in *ListRecommendedProductsRequest, opts ...grpc.CallOption) (*ListRecommendedProductsResponse, error)
	}

	defaultProductRpc struct {
		cli zrpc.Client
	}
)

func NewProductRpc(cli zrpc.Client) ProductRpc {
	return &defaultProductRpc{
		cli: cli,
	}
}

func (m *defaultProductRpc) ListProducts(ctx context.Context, in *ListProductsRequest, opts ...grpc.CallOption) (*ListProductsResponse, error) {
	client := product.NewProductRpcClient(m.cli.Conn())
	return client.ListProducts(ctx, in, opts...)
}

func (m *defaultProductRpc) GetProductDetail(ctx context.Context, in *GetProductDetailRequest, opts ...grpc.CallOption) (*GetProductDetailResponse, error) {
	client := product.NewProductRpcClient(m.cli.Conn())
	return client.GetProductDetail(ctx, in, opts...)
}

func (m *defaultProductRpc) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error) {
	client := product.NewProductRpcClient(m.cli.Conn())
	return client.UpdateProduct(ctx, in, opts...)
}

func (m *defaultProductRpc) AddProduct(ctx context.Context, in *AddProductRequest, opts ...grpc.CallOption) (*AddProductResponse, error) {
	client := product.NewProductRpcClient(m.cli.Conn())
	return client.AddProduct(ctx, in, opts...)
}

func (m *defaultProductRpc) ListBannerProducts(ctx context.Context, in *ListBannerProductsRequest, opts ...grpc.CallOption) (*ListBannerProductsResponse, error) {
	client := product.NewProductRpcClient(m.cli.Conn())
	return client.ListBannerProducts(ctx, in, opts...)
}

func (m *defaultProductRpc) ListRecommendedProducts(ctx context.Context, in *ListRecommendedProductsRequest, opts ...grpc.CallOption) (*ListRecommendedProductsResponse, error) {
	client := product.NewProductRpcClient(m.cli.Conn())
	return client.ListRecommendedProducts(ctx, in, opts...)
}
